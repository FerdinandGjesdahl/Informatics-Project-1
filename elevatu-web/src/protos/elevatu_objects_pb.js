// source: elevatu_objects.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.elevatu.Exercise', null, global);
goog.exportSymbol('proto.elevatu.User', null, global);
goog.exportSymbol('proto.elevatu.WorkoutLog', null, global);
goog.exportSymbol('proto.elevatu.WorkoutLogSet', null, global);
goog.exportSymbol('proto.elevatu.WorkoutPlan', null, global);
goog.exportSymbol('proto.elevatu.WorkoutPlanExercise', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.elevatu.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.elevatu.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.elevatu.User.displayName = 'proto.elevatu.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.elevatu.Exercise = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.elevatu.Exercise, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.elevatu.Exercise.displayName = 'proto.elevatu.Exercise';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.elevatu.WorkoutLogSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.elevatu.WorkoutLogSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.elevatu.WorkoutLogSet.displayName = 'proto.elevatu.WorkoutLogSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.elevatu.WorkoutPlanExercise = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.elevatu.WorkoutPlanExercise, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.elevatu.WorkoutPlanExercise.displayName = 'proto.elevatu.WorkoutPlanExercise';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.elevatu.WorkoutPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.elevatu.WorkoutPlan.repeatedFields_, null);
};
goog.inherits(proto.elevatu.WorkoutPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.elevatu.WorkoutPlan.displayName = 'proto.elevatu.WorkoutPlan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.elevatu.WorkoutLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.elevatu.WorkoutLog.repeatedFields_, null);
};
goog.inherits(proto.elevatu.WorkoutLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.elevatu.WorkoutLog.displayName = 'proto.elevatu.WorkoutLog';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.elevatu.User.prototype.toObject = function(opt_includeInstance) {
  return proto.elevatu.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.elevatu.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    passwordhash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    passwordsalt: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.elevatu.User}
 */
proto.elevatu.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.elevatu.User;
  return proto.elevatu.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.elevatu.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.elevatu.User}
 */
proto.elevatu.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasswordhash(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasswordsalt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.elevatu.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.elevatu.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.elevatu.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPasswordhash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPasswordsalt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.elevatu.User.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.User} returns this
 */
proto.elevatu.User.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string passwordHash = 2;
 * @return {string}
 */
proto.elevatu.User.prototype.getPasswordhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.User} returns this
 */
proto.elevatu.User.prototype.setPasswordhash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string passwordSalt = 3;
 * @return {string}
 */
proto.elevatu.User.prototype.getPasswordsalt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.User} returns this
 */
proto.elevatu.User.prototype.setPasswordsalt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.elevatu.Exercise.prototype.toObject = function(opt_includeInstance) {
  return proto.elevatu.Exercise.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.elevatu.Exercise} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.Exercise.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    owner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.elevatu.Exercise}
 */
proto.elevatu.Exercise.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.elevatu.Exercise;
  return proto.elevatu.Exercise.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.elevatu.Exercise} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.elevatu.Exercise}
 */
proto.elevatu.Exercise.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.elevatu.Exercise.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.elevatu.Exercise.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.elevatu.Exercise} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.Exercise.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.elevatu.Exercise.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.elevatu.Exercise} returns this
 */
proto.elevatu.Exercise.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string owner = 2;
 * @return {string}
 */
proto.elevatu.Exercise.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.Exercise} returns this
 */
proto.elevatu.Exercise.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.elevatu.Exercise.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.Exercise} returns this
 */
proto.elevatu.Exercise.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string notes = 4;
 * @return {string}
 */
proto.elevatu.Exercise.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.Exercise} returns this
 */
proto.elevatu.Exercise.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.elevatu.WorkoutLogSet.prototype.toObject = function(opt_includeInstance) {
  return proto.elevatu.WorkoutLogSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.elevatu.WorkoutLogSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.WorkoutLogSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    exercise: (f = msg.getExercise()) && proto.elevatu.Exercise.toObject(includeInstance, f),
    weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    reps: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.elevatu.WorkoutLogSet}
 */
proto.elevatu.WorkoutLogSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.elevatu.WorkoutLogSet;
  return proto.elevatu.WorkoutLogSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.elevatu.WorkoutLogSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.elevatu.WorkoutLogSet}
 */
proto.elevatu.WorkoutLogSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.elevatu.Exercise;
      reader.readMessage(value,proto.elevatu.Exercise.deserializeBinaryFromReader);
      msg.setExercise(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.elevatu.WorkoutLogSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.elevatu.WorkoutLogSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.elevatu.WorkoutLogSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.WorkoutLogSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExercise();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.elevatu.Exercise.serializeBinaryToWriter
    );
  }
  f = message.getWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getReps();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional Exercise exercise = 1;
 * @return {?proto.elevatu.Exercise}
 */
proto.elevatu.WorkoutLogSet.prototype.getExercise = function() {
  return /** @type{?proto.elevatu.Exercise} */ (
    jspb.Message.getWrapperField(this, proto.elevatu.Exercise, 1));
};


/**
 * @param {?proto.elevatu.Exercise|undefined} value
 * @return {!proto.elevatu.WorkoutLogSet} returns this
*/
proto.elevatu.WorkoutLogSet.prototype.setExercise = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.elevatu.WorkoutLogSet} returns this
 */
proto.elevatu.WorkoutLogSet.prototype.clearExercise = function() {
  return this.setExercise(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.elevatu.WorkoutLogSet.prototype.hasExercise = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float weight = 2;
 * @return {number}
 */
proto.elevatu.WorkoutLogSet.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.elevatu.WorkoutLogSet} returns this
 */
proto.elevatu.WorkoutLogSet.prototype.setWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 reps = 3;
 * @return {number}
 */
proto.elevatu.WorkoutLogSet.prototype.getReps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.elevatu.WorkoutLogSet} returns this
 */
proto.elevatu.WorkoutLogSet.prototype.setReps = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.elevatu.WorkoutPlanExercise.prototype.toObject = function(opt_includeInstance) {
  return proto.elevatu.WorkoutPlanExercise.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.elevatu.WorkoutPlanExercise} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.WorkoutPlanExercise.toObject = function(includeInstance, msg) {
  var f, obj = {
    exercise: (f = msg.getExercise()) && proto.elevatu.Exercise.toObject(includeInstance, f),
    reps: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sets: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.elevatu.WorkoutPlanExercise}
 */
proto.elevatu.WorkoutPlanExercise.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.elevatu.WorkoutPlanExercise;
  return proto.elevatu.WorkoutPlanExercise.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.elevatu.WorkoutPlanExercise} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.elevatu.WorkoutPlanExercise}
 */
proto.elevatu.WorkoutPlanExercise.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.elevatu.Exercise;
      reader.readMessage(value,proto.elevatu.Exercise.deserializeBinaryFromReader);
      msg.setExercise(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReps(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.elevatu.WorkoutPlanExercise.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.elevatu.WorkoutPlanExercise.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.elevatu.WorkoutPlanExercise} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.WorkoutPlanExercise.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExercise();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.elevatu.Exercise.serializeBinaryToWriter
    );
  }
  f = message.getReps();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSets();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional Exercise exercise = 1;
 * @return {?proto.elevatu.Exercise}
 */
proto.elevatu.WorkoutPlanExercise.prototype.getExercise = function() {
  return /** @type{?proto.elevatu.Exercise} */ (
    jspb.Message.getWrapperField(this, proto.elevatu.Exercise, 1));
};


/**
 * @param {?proto.elevatu.Exercise|undefined} value
 * @return {!proto.elevatu.WorkoutPlanExercise} returns this
*/
proto.elevatu.WorkoutPlanExercise.prototype.setExercise = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.elevatu.WorkoutPlanExercise} returns this
 */
proto.elevatu.WorkoutPlanExercise.prototype.clearExercise = function() {
  return this.setExercise(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.elevatu.WorkoutPlanExercise.prototype.hasExercise = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 reps = 2;
 * @return {number}
 */
proto.elevatu.WorkoutPlanExercise.prototype.getReps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.elevatu.WorkoutPlanExercise} returns this
 */
proto.elevatu.WorkoutPlanExercise.prototype.setReps = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 sets = 3;
 * @return {number}
 */
proto.elevatu.WorkoutPlanExercise.prototype.getSets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.elevatu.WorkoutPlanExercise} returns this
 */
proto.elevatu.WorkoutPlanExercise.prototype.setSets = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.elevatu.WorkoutPlan.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.elevatu.WorkoutPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.elevatu.WorkoutPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.elevatu.WorkoutPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.WorkoutPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    owner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 4, ""),
    exerciselistList: jspb.Message.toObjectList(msg.getExerciselistList(),
    proto.elevatu.WorkoutPlanExercise.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.elevatu.WorkoutPlan}
 */
proto.elevatu.WorkoutPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.elevatu.WorkoutPlan;
  return proto.elevatu.WorkoutPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.elevatu.WorkoutPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.elevatu.WorkoutPlan}
 */
proto.elevatu.WorkoutPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 5:
      var value = new proto.elevatu.WorkoutPlanExercise;
      reader.readMessage(value,proto.elevatu.WorkoutPlanExercise.deserializeBinaryFromReader);
      msg.addExerciselist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.elevatu.WorkoutPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.elevatu.WorkoutPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.elevatu.WorkoutPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.WorkoutPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExerciselistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.elevatu.WorkoutPlanExercise.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.elevatu.WorkoutPlan.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.elevatu.WorkoutPlan} returns this
 */
proto.elevatu.WorkoutPlan.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string owner = 2;
 * @return {string}
 */
proto.elevatu.WorkoutPlan.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.WorkoutPlan} returns this
 */
proto.elevatu.WorkoutPlan.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.elevatu.WorkoutPlan.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.WorkoutPlan} returns this
 */
proto.elevatu.WorkoutPlan.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string notes = 4;
 * @return {string}
 */
proto.elevatu.WorkoutPlan.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.WorkoutPlan} returns this
 */
proto.elevatu.WorkoutPlan.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated WorkoutPlanExercise exerciseList = 5;
 * @return {!Array<!proto.elevatu.WorkoutPlanExercise>}
 */
proto.elevatu.WorkoutPlan.prototype.getExerciselistList = function() {
  return /** @type{!Array<!proto.elevatu.WorkoutPlanExercise>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.elevatu.WorkoutPlanExercise, 5));
};


/**
 * @param {!Array<!proto.elevatu.WorkoutPlanExercise>} value
 * @return {!proto.elevatu.WorkoutPlan} returns this
*/
proto.elevatu.WorkoutPlan.prototype.setExerciselistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.elevatu.WorkoutPlanExercise=} opt_value
 * @param {number=} opt_index
 * @return {!proto.elevatu.WorkoutPlanExercise}
 */
proto.elevatu.WorkoutPlan.prototype.addExerciselist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.elevatu.WorkoutPlanExercise, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.elevatu.WorkoutPlan} returns this
 */
proto.elevatu.WorkoutPlan.prototype.clearExerciselistList = function() {
  return this.setExerciselistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.elevatu.WorkoutLog.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.elevatu.WorkoutLog.prototype.toObject = function(opt_includeInstance) {
  return proto.elevatu.WorkoutLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.elevatu.WorkoutLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.WorkoutLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    owner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    date: (f = msg.getDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    performedsetsList: jspb.Message.toObjectList(msg.getPerformedsetsList(),
    proto.elevatu.WorkoutLogSet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.elevatu.WorkoutLog}
 */
proto.elevatu.WorkoutLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.elevatu.WorkoutLog;
  return proto.elevatu.WorkoutLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.elevatu.WorkoutLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.elevatu.WorkoutLog}
 */
proto.elevatu.WorkoutLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 4:
      var value = new proto.elevatu.WorkoutLogSet;
      reader.readMessage(value,proto.elevatu.WorkoutLogSet.deserializeBinaryFromReader);
      msg.addPerformedsets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.elevatu.WorkoutLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.elevatu.WorkoutLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.elevatu.WorkoutLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.elevatu.WorkoutLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPerformedsetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.elevatu.WorkoutLogSet.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.elevatu.WorkoutLog.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.elevatu.WorkoutLog} returns this
 */
proto.elevatu.WorkoutLog.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string owner = 2;
 * @return {string}
 */
proto.elevatu.WorkoutLog.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.elevatu.WorkoutLog} returns this
 */
proto.elevatu.WorkoutLog.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.elevatu.WorkoutLog.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.elevatu.WorkoutLog} returns this
*/
proto.elevatu.WorkoutLog.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.elevatu.WorkoutLog} returns this
 */
proto.elevatu.WorkoutLog.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.elevatu.WorkoutLog.prototype.hasDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated WorkoutLogSet performedSets = 4;
 * @return {!Array<!proto.elevatu.WorkoutLogSet>}
 */
proto.elevatu.WorkoutLog.prototype.getPerformedsetsList = function() {
  return /** @type{!Array<!proto.elevatu.WorkoutLogSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.elevatu.WorkoutLogSet, 4));
};


/**
 * @param {!Array<!proto.elevatu.WorkoutLogSet>} value
 * @return {!proto.elevatu.WorkoutLog} returns this
*/
proto.elevatu.WorkoutLog.prototype.setPerformedsetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.elevatu.WorkoutLogSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.elevatu.WorkoutLogSet}
 */
proto.elevatu.WorkoutLog.prototype.addPerformedsets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.elevatu.WorkoutLogSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.elevatu.WorkoutLog} returns this
 */
proto.elevatu.WorkoutLog.prototype.clearPerformedsetsList = function() {
  return this.setPerformedsetsList([]);
};


goog.object.extend(exports, proto.elevatu);
